/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package plug.test

import org.pf4j.DefaultPluginManager
import org.pf4j.ManifestPluginDescriptorFinder
import org.pf4j.PluginDescriptorFinder
import org.pf4j.PluginManager

class App implements Closeable {

    PluginManager pluginManager

    App() {
        System.setProperty('pf4j.pluginsDir', new File('./plugins').canonicalPath)
        System.setProperty('pf4j.mode', 'development')

        pluginManager = new DefaultPluginManager() {
            @Override
            protected PluginDescriptorFinder createPluginDescriptorFinder() {
                return new ManifestPluginDescriptorFinder()
            }
        };
        pluginManager.loadPlugins()
        pluginManager.startPlugins()
    }

    void run() {

        // lookup
        List<Greeting> greetings = pluginManager.getExtensions(Greeting.class);
        for (Greeting greeting : greetings) {
            System.out.println(">>> " + greeting.getGreeting());
        }

    }

    @Override
    void close() throws IOException {
        pluginManager.stopPlugins()
    }

    static void main(String[] args) {
        def app = new App()
        try {
            app.run()
        }
        finally {
            app.close()
        }
    }
}
